name: Check Source Update


on:
  schedule:
    # Run daily at 00:00 UTC
    - cron: '0 0 * * *'
  workflow_dispatch:


jobs:
  check-update:
    runs-on: ubuntu-latest
    env:
      SOURCE_REPO_URL: https://github.com/aseprite/api.git
      ISSUE_LABEL: source-update
      ISSUE_ASSIGNEE: Tsukina-7mochi

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get latest commit hash from source repository
        id: get-hash
        run: |
          LATEST_HASH=$(git ls-remote ${{ env.SOURCE_REPO_URL }} HEAD | awk '{print $1}')
          LATEST_HASH_SHORT=${LATEST_HASH:0:7}
          echo "latest_hash=$LATEST_HASH" >> $GITHUB_OUTPUT
          echo "latest_hash_short=$LATEST_HASH_SHORT" >> $GITHUB_OUTPUT
          echo "Latest commit hash: $LATEST_HASH ($LATEST_HASH_SHORT)"

      - name: Read current commit hash
        id: current-hash
        uses: ./.github/actions/get-current-source-hash
        with:
          init-file-path: ./definitions/aseprite.lua

      - name: Check if update is needed
        id: check
        run: |
          if [ "${{ steps.get-hash.outputs.latest_hash }}" != "${{ steps.current-hash.outputs.current_hash }}" ]; then
            echo "update_needed=true" >> $GITHUB_OUTPUT
            echo "Update needed!"
          else
            echo "update_needed=false" >> $GITHUB_OUTPUT
            echo "No update needed."
          fi

      - name: Check for existing issue
        if: steps.check.outputs.update_needed == 'true'
        id: existing-issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE_NUMBER=$(gh issue list --label "${{ env.ISSUE_LABEL }}" --state open --json number --jq '.[0].number')
          if [ -n "$ISSUE_NUMBER" ]; then
            echo "issue_exists=true" >> $GITHUB_OUTPUT
            echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
            echo "Found existing issue #$ISSUE_NUMBER"
          else
            echo "issue_exists=false" >> $GITHUB_OUTPUT
            echo "No existing issue found"
          fi

      - name: Update existing issue
        if: steps.check.outputs.update_needed == 'true' && steps.existing-issue.outputs.issue_exists == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          SOURCE_REPO_URL="${{ env.SOURCE_REPO_URL }}"
          REPO_URL_CLEAN="${SOURCE_REPO_URL%.git}"
          gh issue edit ${{ steps.existing-issue.outputs.issue_number }} \
            --title "Update source to ${{ steps.get-hash.outputs.latest_hash_short }}" \
            --body "$(cat <<EOF
          Update source reference to ${{ steps.get-hash.outputs.latest_hash_short }}

          ## Updates:
          - Source repository: \`${{ env.SOURCE_REPO_URL }}\`
          - Previous commit: \`${{ steps.current-hash.outputs.current_hash_short }}\`
          - New commit: \`${{ steps.get-hash.outputs.latest_hash_short }}\`

          Changes: \${REPO_URL_CLEAN}/compare/${{ steps.current-hash.outputs.current_hash }}...${{ steps.get-hash.outputs.latest_hash }}
          EOF
          )"
          gh issue edit ${{ steps.existing-issue.outputs.issue_number }} --add-assignee "${{ env.ISSUE_ASSIGNEE }}"

      - name: Create new issue
        if: steps.check.outputs.update_needed == 'true' && steps.existing-issue.outputs.issue_exists == 'false'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          SOURCE_REPO_URL="${{ env.SOURCE_REPO_URL }}"
          REPO_URL_CLEAN="${SOURCE_REPO_URL%.git}"
          gh issue create \
            --title "Update source to ${{ steps.get-hash.outputs.latest_hash_short }}" \
            --body "$(cat <<EOF
          Update source reference to ${{ steps.get-hash.outputs.latest_hash_short }}

          ## Updates:
          - Source repository: \`${{ env.SOURCE_REPO_URL }}\`
          - Previous commit: \`${{ steps.current-hash.outputs.current_hash_short }}\`
          - New commit: \`${{ steps.get-hash.outputs.latest_hash_short }}\`

          Changes: \${REPO_URL_CLEAN}/compare/${{ steps.current-hash.outputs.current_hash }}...${{ steps.get-hash.outputs.latest_hash }}
          EOF
          )" \
            --label "${{ env.ISSUE_LABEL }}" \
            --assignee "${{ env.ISSUE_ASSIGNEE }}"
